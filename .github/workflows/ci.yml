name: CI Test Suite

on:
  schedule:
    - cron: '0 * * * *'
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main"]
  workflow_dispatch:

jobs:
  ci-tests:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
    
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install Allure CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jre
        curl -o allure.tgz -L https://github.com/allure-framework/allure2/releases/download/2.33.0/allure-2.33.0.tgz
        tar -zxvf allure.tgz -C /opt/
        sudo ln -s /opt/allure-2.33.0/bin/allure /usr/bin/allure

    - name: Check out code
      uses: actions/checkout@v4

    - name: Install Package
      run: |
        poetry install 

    - name: Run tests with pytest and generate Allure results
      env:
        WOLFRAM_APP_ID: ${{ secrets.WOLFRAM_APP_ID }}
      run: |
        mkdir -p allure-results
        poetry run pytest tests --alluredir=allure-results
        allure generate --single-file allure-results -o allure-report --clean

    - name: Upload Allure report HTML as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-html
        path: allure-report/index.html

    - name: Generate Allure Markdown report
      run: poetry run python src/allure-md.py --alluredir=allure-results

    - name: Upload Allure Markdown report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-md
        path: allure-report.md

    - name: Generate Allure PDF report
      run: |
        sudo apt install pandoc texlive-latex-extra
        pandoc allure-report.md -o allure-report.pdf

    - name: Upload Allure PDF report
      uses: actions/upload-artifact@v4
      with:
        name: allure-report-pdf
        path: allure-report.pdf