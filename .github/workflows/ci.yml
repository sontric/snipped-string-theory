name: CI Test Suite

on:
  schedule:
    - cron: '0 * * * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  ci-tests:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"

    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Install Allure CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jre
        curl -o allure.tgz -L https://github.com/allure-framework/allure2/releases/download/2.33.0/allure-2.33.0.tgz
        tar -zxvf allure.tgz -C /opt/
        sudo ln -s /opt/allure-2.33.0/bin/allure /usr/bin/allure

    - name: Check out code
      uses: actions/checkout@v4

    - name: Install Package
      run: poetry install

    - name: Run tests with pytest and generate Allure results
      env:
        WOLFRAM_APP_ID: ${{ secrets.WOLFRAM_APP_ID }}
      run: |
        mkdir -p allure-results
        poetry run pytest tests --alluredir=allure-results --md pytest-results.md
        allure generate --single-file allure-results -o allure-report --clean

<<<<<<< Updated upstream
    - name: Upload PyTest markdown report as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: pytest-report
        path: pytest-report.md

    - name: Upload Allure report HTML as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report/index.html
=======
    - name: Generate Allure Markdown report
      run: poetry run python src/allure-md.py --alluredir=allure-results

    - name: Generate Allure PDF report
      run: |
        sudo apt install -y pandoc texlive-latex-extra
        pandoc allure-report.md -o allure-report.pdf

    - name: Import GPG key
      run: |
        echo "$GPG_PRIVATE_KEY" | gpg --batch --import
        echo "test-suite@example.com:6:" | gpg --import-ownertrust
      env:
        GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

    - name: Sign Allure reports with GPG
      run: |
        gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" \
            --output allure-report.md.asc --armor --sign allure-report.md
        gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" \
            --output allure-report.pdf.asc --armor --sign allure-report.pdf
        gpg --batch --yes --pinentry-mode loopback --passphrase "$GPG_PASSPHRASE" \
            --output allure-report.pdf.asc --armor --sign allure-report.html
      env:
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    - name: Zip all report artifacts
      run: |
        mkdir bundle
        cp allure-report/index.html bundle/
        cp allure-report/index.html.asc bundle/
        cp allure-report.md bundle/
        cp allure-report.md.asc bundle/
        cp allure-report.pdf bundle/
        cp allure-report.pdf.asc bundle/
        zip -r allure-signed-report.zip bundle/

    - name: Upload Allure Signed Report Bundle
      uses: actions/upload-artifact@v4
      with:
        name: allure-signed-report
        path: allure-signed-report.zip
>>>>>>> Stashed changes
